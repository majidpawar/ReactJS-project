{"ast":null,"code":"var _jsxFileName = \"D:\\\\UPGRAD\\\\React Assignment\\\\Final\\\\src\\\\screens\\\\details\\\\Details.js\";\nimport React, { Component } from 'react';\nimport Header from '../../common/header/Header';\nimport Typography from '@material-ui/core/Typography';\nimport './Details.css';\nimport YouTube from 'react-youtube';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Details extends Component {\n  constructor() {\n    super();\n\n    this.artistClickHandler = url => {\n      window.location = url;\n    };\n\n    this.starClickHandler = id => {\n      let starIconList = [];\n\n      for (let star of this.state.starIcons) {\n        let starNode = star;\n\n        if (star.id <= id) {\n          starNode.color = \"yellow\";\n        } else {\n          starNode.color = \"black\";\n        }\n\n        starIconList.push(starNode);\n      }\n\n      this.setState({\n        starIcons: starIconList\n      });\n    };\n\n    this.state = {\n      movie: {\n        genres: [],\n        trailer_url: \"\",\n        artists: []\n      },\n      starIcons: [{\n        id: 1,\n        stateId: \"star1\",\n        color: \"black\"\n      }, {\n        id: 2,\n        stateId: \"star2\",\n        color: \"black\"\n      }, {\n        id: 3,\n        stateId: \"star3\",\n        color: \"black\"\n      }, {\n        id: 4,\n        stateId: \"star4\",\n        color: \"black\"\n      }, {\n        id: 5,\n        stateId: \"star5\",\n        color: \"black\"\n      }]\n    };\n  }\n\n  componentWillMount() {\n    let that = this;\n    let dataMovie = null;\n    let xhrMovie = new XMLHttpRequest();\n    xhrMovie.addEventListener(\"readystatechange\", function () {\n      if (this.readyState === 4) {\n        that.setState({\n          movie: JSON.parse(this.responseText)\n        });\n      }\n    });\n    xhrMovie.open(\"GET\", this.props.baseUrl + \"movies/\" + this.props.match.params.id);\n    xhrMovie.setRequestHeader(\"Cache-Control\", \"no-cache\");\n    xhrMovie.send(dataMovie);\n  }\n\n  render() {\n    let movie = this.state.movie;\n    const opts = {\n      height: '300',\n      width: '700',\n      playerVars: {\n        autoplay: 1\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        id: this.props.match.params.id,\n        baseUrl: this.props.baseUrl,\n        showBookShowButton: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"back\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"  < Back to Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-containerDetails\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"leftDetails\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.poster_url,\n            alt: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"middleDetails\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"headline\",\n              component: \"h2\",\n              children: [movie.title, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bold\",\n                children: \"Genres: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this), \" \", movie.genres.join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bold\",\n                children: \"Duration:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 41\n              }, this), \" \", movie.duration, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bold\",\n                children: \"Release Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 41\n              }, this), \" \", new Date(movie.release_date).toDateString(), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bold\",\n                children: \" Rating:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 41\n              }, this), \" \", movie.critics_rating, \"  \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"marginTop16\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bold\",\n                children: \"Plot:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 41\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: movie.wiki_url,\n                children: \"(Wiki Link)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 77\n              }, this), \" \", movie.storyline, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trailerContainer\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bold\",\n                children: \"Trailer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(YouTube, {\n              videoId: movie.trailer_url.split(\"?v=\")[1],\n              opts: opts,\n              onReady: this._onReady\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rightDetails\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bold\",\n              children: \"Rate this movie: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), this.state.starIcons.map(star => /*#__PURE__*/_jsxDEV(StarBorderIcon, {\n            className: star.color,\n            onClick: () => this.starClickHandler(star.id)\n          }, \"star\" + star.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bold marginBottom16 marginTop16\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bold\",\n                children: \"Artists:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"paddingRight\",\n            children: /*#__PURE__*/_jsxDEV(GridList, {\n              cellHeight: 160,\n              cols: 2,\n              children: movie.artists != null && movie.artists.map(artist => /*#__PURE__*/_jsxDEV(GridListTile, {\n                className: \"gridTile\",\n                onClick: () => this.artistClickHandler(artist.wiki_url),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: artist.profile_url,\n                  alt: artist.first_name + \" \" + artist.last_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n                  title: artist.first_name + \" \" + artist.last_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 41\n                }, this)]\n              }, artist.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Details;","map":{"version":3,"sources":["D:/UPGRAD/React Assignment/Final/src/screens/details/Details.js"],"names":["React","Component","Header","Typography","YouTube","GridList","GridListTile","GridListTileBar","StarBorderIcon","Link","Details","constructor","artistClickHandler","url","window","location","starClickHandler","id","starIconList","star","state","starIcons","starNode","color","push","setState","movie","genres","trailer_url","artists","stateId","componentWillMount","that","dataMovie","xhrMovie","XMLHttpRequest","addEventListener","readyState","JSON","parse","responseText","open","props","baseUrl","match","params","setRequestHeader","send","render","opts","height","width","playerVars","autoplay","poster_url","title","join","duration","Date","release_date","toDateString","critics_rating","wiki_url","storyline","split","_onReady","map","artist","profile_url","first_name","last_name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from '../../common/header/Header';\nimport Typography from '@material-ui/core/Typography';\nimport './Details.css';\nimport YouTube from 'react-youtube';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport { Link } from 'react-router-dom';\n\nclass Details extends Component {\n    constructor() {\n        super();\n        this.state = {\n            movie: {\n                genres: [],\n                trailer_url: \"\",\n                artists: []\n            },\n            starIcons: [{\n                id: 1,\n                stateId: \"star1\",\n                color: \"black\"\n            },\n            {\n                id: 2,\n                stateId: \"star2\",\n                color: \"black\"\n            },\n            {\n                id: 3,\n                stateId: \"star3\",\n                color: \"black\"\n            },\n            {\n                id: 4,\n                stateId: \"star4\",\n                color: \"black\"\n            },\n            {\n                id: 5,\n                stateId: \"star5\",\n                color: \"black\"\n            }]\n        }\n    }\n\n    componentWillMount() {\n        let that = this;\n        let dataMovie = null;\n        let xhrMovie = new XMLHttpRequest();\n        xhrMovie.addEventListener(\"readystatechange\", function () {\n            if (this.readyState === 4) {\n                that.setState({\n                    movie: JSON.parse(this.responseText)\n                });\n            }\n        });\n\n        xhrMovie.open(\"GET\", this.props.baseUrl + \"movies/\" + this.props.match.params.id);\n        xhrMovie.setRequestHeader(\"Cache-Control\", \"no-cache\");\n        xhrMovie.send(dataMovie);\n    }\n\n    artistClickHandler = (url) => {\n        window.location = url;\n    }\n\n    starClickHandler = (id) => {\n        let starIconList = [];\n        for (let star of this.state.starIcons) {\n            let starNode = star;\n            if (star.id <= id) {\n                starNode.color = \"yellow\"\n            }\n            else {\n                starNode.color = \"black\";\n\n            }\n            starIconList.push(starNode);\n        }\n        this.setState({ starIcons: starIconList });\n    }\n\n    render() {\n        let movie = this.state.movie;\n        const opts = {\n            height: '300',\n            width: '700',\n            playerVars: {\n                autoplay: 1\n            }\n        }\n        return (\n            <div className=\"details\">\n                <Header id={this.props.match.params.id} baseUrl={this.props.baseUrl} showBookShowButton=\"true\" />\n                <div className=\"back\">\n                    <Typography>\n                        <Link to=\"/\">  &#60; Back to Home</Link>\n                    </Typography>\n                </div>\n                <div className=\"flex-containerDetails\">\n                    <div className=\"leftDetails\">\n                        <img src={movie.poster_url} alt={movie.title} />\n                    </div>\n\n                    <div className=\"middleDetails\">\n                        <div>\n                            <Typography variant=\"headline\" component=\"h2\">{movie.title} </Typography>\n                        </div>\n                        <br />\n                        <div>\n                            <Typography>\n                                <span className=\"bold\">Genres: </span> {movie.genres.join(', ')}\n                            </Typography>\n                        </div>\n                        <div>\n                            <Typography><span className=\"bold\">Duration:</span> {movie.duration} </Typography>\n                        </div>\n                        <div>\n                            <Typography><span className=\"bold\">Release Date:</span> {new Date(movie.release_date).toDateString()} </Typography>\n                        </div>\n                        <div>\n                            <Typography><span className=\"bold\"> Rating:</span> {movie.critics_rating}  </Typography>\n                        </div>\n                        <div className=\"marginTop16\">\n                            <Typography><span className=\"bold\">Plot:</span> <a href={movie.wiki_url}>(Wiki Link)</a> {movie.storyline} </Typography>\n                        </div>\n                        <div className=\"trailerContainer\">\n                            <Typography>\n                                <span className=\"bold\">Trailer:</span>\n                            </Typography>\n                            <YouTube\n                                videoId={movie.trailer_url.split(\"?v=\")[1]}\n                                opts={opts}\n                                onReady={this._onReady}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"rightDetails\">\n                        <Typography>\n                            <span className=\"bold\">Rate this movie: </span>\n                        </Typography>\n                        {this.state.starIcons.map(star => (\n                            <StarBorderIcon\n                                className={star.color}\n                                key={\"star\" + star.id}\n                                onClick={() => this.starClickHandler(star.id)}\n                            />\n                        ))}\n\n                        <div className=\"bold marginBottom16 marginTop16\">\n                            <Typography>\n                                <span className=\"bold\">Artists:</span>\n                            </Typography>\n                        </div>\n                        <div className=\"paddingRight\">\n                            <GridList cellHeight={160} cols={2}>\n                                {movie.artists != null && movie.artists.map(artist => (\n                                    <GridListTile\n                                        className=\"gridTile\"\n                                        onClick={() => this.artistClickHandler(artist.wiki_url)}\n                                        key={artist.id}>\n                                        <img src={artist.profile_url} alt={artist.first_name + \" \" + artist.last_name} />\n                                        <GridListTileBar\n                                            title={artist.first_name + \" \" + artist.last_name}\n                                        />\n                                    </GridListTile>\n                                ))}\n                            </GridList>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Details;"]},"metadata":{},"sourceType":"module"}