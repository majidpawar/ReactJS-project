{"ast":null,"code":"var _jsxFileName = \"D:\\\\UPGRAD\\\\React Assignment\\\\Final\\\\src\\\\common\\\\header\\\\Header.js\";\nimport React, { Component } from 'react';\nimport './Header.css';\nimport Button from '@material-ui/core/Button';\nimport logo from \"../../assets/logo.svg\";\nimport Modal from 'react-modal';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport PropTypes from 'prop-types';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\nconst TabContainer = function (props) {\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    component: \"div\",\n    style: {\n      padding: 0,\n      textAlign: 'center'\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TabContainer;\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nclass Header extends Component {\n  constructor() {\n    super();\n\n    this.openModalHandler = () => {\n      this.setState({\n        modalIsOpen: true,\n        value: 0,\n        usernameRequired: \"dispNone\",\n        username: \"\",\n        loginPasswordRequired: \"dispNone\",\n        loginPassword: \"\",\n        firstnameRequired: \"dispNone\",\n        firstname: \"\",\n        lastnameRequired: \"dispNone\",\n        lastname: \"\",\n        emailRequired: \"dispNone\",\n        email: \"\",\n        registerPasswordRequired: \"dispNone\",\n        registerPassword: \"\",\n        contactRequired: \"dispNone\",\n        contact: \"\"\n      });\n    };\n\n    this.closeModalHandler = () => {\n      this.setState({\n        modalIsOpen: false\n      });\n    };\n\n    this.tabChangeHandler = (event, value) => {\n      this.setState({\n        value\n      });\n    };\n\n    this.loginClickHandler = () => {\n      this.state.username === \"\" ? this.setState({\n        usernameRequired: \"dispBlock\"\n      }) : this.setState({\n        usernameRequired: \"dispNone\"\n      });\n      this.state.loginPassword === \"\" ? this.setState({\n        loginPasswordRequired: \"dispBlock\"\n      }) : this.setState({\n        loginPasswordRequired: \"dispNone\"\n      });\n      let dataLogin = null;\n      let xhrLogin = new XMLHttpRequest();\n      let that = this;\n      xhrLogin.addEventListener(\"readystatechange\", function () {\n        if (this.readyState === 4) {\n          sessionStorage.setItem(\"uuid\", JSON.parse(this.responseText).id);\n          sessionStorage.setItem(\"access-token\", xhrLogin.getResponseHeader(\"access-token\"));\n          that.setState({\n            loggedIn: true\n          });\n          that.closeModalHandler();\n        }\n      });\n      xhrLogin.open(\"POST\", this.props.baseUrl + \"auth/login\");\n      xhrLogin.setRequestHeader(\"Authorization\", \"Basic \" + window.btoa(this.state.username + \":\" + this.state.loginPassword));\n      xhrLogin.setRequestHeader(\"Content-Type\", \"application/json\");\n      xhrLogin.setRequestHeader(\"Cache-Control\", \"no-cache\");\n      xhrLogin.send(dataLogin);\n    };\n\n    this.inputUsernameChangeHandler = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.inputLoginPasswordChangeHandler = e => {\n      this.setState({\n        loginPassword: e.target.value\n      });\n    };\n\n    this.registerClickHandler = () => {\n      this.state.firstname === \"\" ? this.setState({\n        firstnameRequired: \"dispBlock\"\n      }) : this.setState({\n        firstnameRequired: \"dispNone\"\n      });\n      this.state.lastname === \"\" ? this.setState({\n        lastnameRequired: \"dispBlock\"\n      }) : this.setState({\n        lastnameRequired: \"dispNone\"\n      });\n      this.state.email === \"\" ? this.setState({\n        emailRequired: \"dispBlock\"\n      }) : this.setState({\n        emailRequired: \"dispNone\"\n      });\n      this.state.registerPassword === \"\" ? this.setState({\n        registerPasswordRequired: \"dispBlock\"\n      }) : this.setState({\n        registerPasswordRequired: \"dispNone\"\n      });\n      this.state.contact === \"\" ? this.setState({\n        contactRequired: \"dispBlock\"\n      }) : this.setState({\n        contactRequired: \"dispNone\"\n      });\n      let dataSignup = JSON.stringify({\n        \"email_address\": this.state.email,\n        \"first_name\": this.state.firstname,\n        \"last_name\": this.state.lastname,\n        \"mobile_number\": this.state.contact,\n        \"password\": this.state.registerPassword\n      });\n      let xhrSignup = new XMLHttpRequest();\n      let that = this;\n      xhrSignup.addEventListener(\"readystatechange\", function () {\n        if (this.readyState === 4) {\n          that.setState({\n            registrationSuccess: true\n          });\n        }\n      });\n      xhrSignup.open(\"POST\", this.props.baseUrl + \"signup\");\n      xhrSignup.setRequestHeader(\"Content-Type\", \"application/json\");\n      xhrSignup.setRequestHeader(\"Cache-Control\", \"no-cache\");\n      xhrSignup.send(dataSignup);\n    };\n\n    this.inputFirstNameChangeHandler = e => {\n      this.setState({\n        firstname: e.target.value\n      });\n    };\n\n    this.inputLastNameChangeHandler = e => {\n      this.setState({\n        lastname: e.target.value\n      });\n    };\n\n    this.inputEmailChangeHandler = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.inputRegisterPasswordChangeHandler = e => {\n      this.setState({\n        registerPassword: e.target.value\n      });\n    };\n\n    this.inputContactChangeHandler = e => {\n      this.setState({\n        contact: e.target.value\n      });\n    };\n\n    this.logoutHandler = e => {\n      sessionStorage.removeItem(\"uuid\");\n      sessionStorage.removeItem(\"access-token\");\n      this.setState({\n        loggedIn: false\n      });\n    };\n\n    this.state = {\n      modalIsOpen: false,\n      value: 0,\n      usernameRequired: \"dispNone\",\n      username: \"\",\n      loginPasswordRequired: \"dispNone\",\n      loginPassword: \"\",\n      firstnameRequired: \"dispNone\",\n      firstname: \"\",\n      lastnameRequired: \"dispNone\",\n      lastname: \"\",\n      emailRequired: \"dispNone\",\n      email: \"\",\n      registerPasswordRequired: \"dispNone\",\n      registerPassword: \"\",\n      contactRequired: \"dispNone\",\n      contact: \"\",\n      registrationSuccess: false,\n      loggedIn: sessionStorage.getItem(\"access-token\") == null ? false : true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"app-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"app-logo\",\n          alt: \"Movies App Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), !this.state.loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-button\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"default\",\n            onClick: this.openModalHandler,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-button\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"default\",\n            onClick: this.logoutHandler,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this), this.props.showBookShowButton === \"true\" && !this.state.loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bookshow-button\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: this.openModalHandler,\n            children: \"Book Show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 27\n        }, this) : \"\", this.props.showBookShowButton === \"true\" && this.state.loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bookshow-button\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/bookshow/\" + this.props.id,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              children: \"Book Show\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 27\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        ariaHideApp: false,\n        isOpen: this.state.modalIsOpen,\n        contentLabel: \"Login\",\n        onRequestClose: this.closeModalHandler,\n        style: customStyles,\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          className: \"tabs\",\n          value: this.state.value,\n          onChange: this.tabChangeHandler,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), this.state.value === 0 && /*#__PURE__*/_jsxDEV(TabContainer, {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"username\",\n              type: \"text\",\n              username: this.state.username,\n              onChange: this.inputUsernameChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: this.state.usernameRequired,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red\",\n                children: \"required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"loginPassword\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"loginPassword\",\n              type: \"password\",\n              loginpassword: this.state.loginPassword,\n              onChange: this.inputLoginPasswordChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: this.state.loginPasswordRequired,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red\",\n                children: \"required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 35\n          }, this), this.state.loggedIn === true && /*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"successText\",\n              children: \"Login Successful!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: this.loginClickHandler,\n            children: \"LOGIN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this), this.state.value === 1 && /*#__PURE__*/_jsxDEV(TabContainer, {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"firstname\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"firstname\",\n              type: \"text\",\n              firstname: this.state.firstname,\n              onChange: this.inputFirstNameChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: this.state.firstnameRequired,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red\",\n                children: \"required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"lastname\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"lastname\",\n              type: \"text\",\n              lastname: this.state.lastname,\n              onChange: this.inputLastNameChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: this.state.lastnameRequired,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red\",\n                children: \"required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"email\",\n              type: \"text\",\n              email: this.state.email,\n              onChange: this.inputEmailChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: this.state.emailRequired,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red\",\n                children: \"required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"registerPassword\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"registerPassword\",\n              type: \"password\",\n              registerpassword: this.state.registerPassword,\n              onChange: this.inputRegisterPasswordChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: this.state.registerPasswordRequired,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red\",\n                children: \"required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"contact\",\n              children: \"Contact No.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"contact\",\n              type: \"text\",\n              contact: this.state.contact,\n              onChange: this.inputContactChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: this.state.contactRequired,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red\",\n                children: \"required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 35\n          }, this), this.state.registrationSuccess === true && /*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"successText\",\n              children: \"Registration Successful. Please Login!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: this.registerClickHandler,\n            children: \"REGISTER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"TabContainer\");","map":{"version":3,"sources":["D:/UPGRAD/React Assignment/Final/src/common/header/Header.js"],"names":["React","Component","Button","Modal","Tabs","Tab","Typography","FormControl","InputLabel","Input","PropTypes","FormHelperText","Link","customStyles","content","top","left","right","bottom","marginRight","transform","TabContainer","props","padding","textAlign","children","propTypes","node","isRequired","Header","constructor","openModalHandler","setState","modalIsOpen","value","usernameRequired","username","loginPasswordRequired","loginPassword","firstnameRequired","firstname","lastnameRequired","lastname","emailRequired","email","registerPasswordRequired","registerPassword","contactRequired","contact","closeModalHandler","tabChangeHandler","event","loginClickHandler","state","dataLogin","xhrLogin","XMLHttpRequest","that","addEventListener","readyState","sessionStorage","setItem","JSON","parse","responseText","id","getResponseHeader","loggedIn","open","baseUrl","setRequestHeader","window","btoa","send","inputUsernameChangeHandler","e","target","inputLoginPasswordChangeHandler","registerClickHandler","dataSignup","stringify","xhrSignup","registrationSuccess","inputFirstNameChangeHandler","inputLastNameChangeHandler","inputEmailChangeHandler","inputRegisterPasswordChangeHandler","inputContactChangeHandler","logoutHandler","removeItem","getItem","render","logo","showBookShowButton"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Header.css';\nimport Button from '@material-ui/core/Button';\nimport logo from '../../assets/logo.svg';\nimport Modal from 'react-modal';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport PropTypes from 'prop-types';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { Link } from 'react-router-dom';\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)'\n    }\n};\n\nconst TabContainer = function (props) {\n    return (\n        <Typography component=\"div\" style={{ padding: 0, textAlign: 'center' }}>\n            {props.children}\n        </Typography>\n    )\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired\n}\n\nclass Header extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            modalIsOpen: false,\n            value: 0,\n            usernameRequired: \"dispNone\",\n            username: \"\",\n            loginPasswordRequired: \"dispNone\",\n            loginPassword: \"\",\n            firstnameRequired: \"dispNone\",\n            firstname: \"\",\n            lastnameRequired: \"dispNone\",\n            lastname: \"\",\n            emailRequired: \"dispNone\",\n            email: \"\",\n            registerPasswordRequired: \"dispNone\",\n            registerPassword: \"\",\n            contactRequired: \"dispNone\",\n            contact: \"\",\n            registrationSuccess: false,\n            loggedIn: sessionStorage.getItem(\"access-token\") == null ? false : true\n        }\n    }\n\n    openModalHandler = () => {\n        this.setState({\n            modalIsOpen: true,\n            value: 0,\n            usernameRequired: \"dispNone\",\n            username: \"\",\n            loginPasswordRequired: \"dispNone\",\n            loginPassword: \"\",\n            firstnameRequired: \"dispNone\",\n            firstname: \"\",\n            lastnameRequired: \"dispNone\",\n            lastname: \"\",\n            emailRequired: \"dispNone\",\n            email: \"\",\n            registerPasswordRequired: \"dispNone\",\n            registerPassword: \"\",\n            contactRequired: \"dispNone\",\n            contact: \"\"\n        });\n    }\n\n    closeModalHandler = () => {\n        this.setState({ modalIsOpen: false });\n    }\n\n    tabChangeHandler = (event, value) => {\n        this.setState({ value });\n    }\n\n    loginClickHandler = () => {\n        this.state.username === \"\" ? this.setState({ usernameRequired: \"dispBlock\" }) : this.setState({ usernameRequired: \"dispNone\" });\n        this.state.loginPassword === \"\" ? this.setState({ loginPasswordRequired: \"dispBlock\" }) : this.setState({ loginPasswordRequired: \"dispNone\" });\n\n        let dataLogin = null;\n        let xhrLogin = new XMLHttpRequest();\n        let that = this;\n        xhrLogin.addEventListener(\"readystatechange\", function () {\n            if (this.readyState === 4) {\n                sessionStorage.setItem(\"uuid\", JSON.parse(this.responseText).id);\n                sessionStorage.setItem(\"access-token\", xhrLogin.getResponseHeader(\"access-token\"));\n\n                that.setState({\n                    loggedIn: true\n                });\n\n                that.closeModalHandler();\n            }\n        });\n\n        xhrLogin.open(\"POST\", this.props.baseUrl + \"auth/login\");\n        xhrLogin.setRequestHeader(\"Authorization\", \"Basic \" + window.btoa(this.state.username + \":\" + this.state.loginPassword));\n        xhrLogin.setRequestHeader(\"Content-Type\", \"application/json\");\n        xhrLogin.setRequestHeader(\"Cache-Control\", \"no-cache\");\n        xhrLogin.send(dataLogin);\n    }\n\n    inputUsernameChangeHandler = (e) => {\n        this.setState({ username: e.target.value });\n    }\n\n    inputLoginPasswordChangeHandler = (e) => {\n        this.setState({ loginPassword: e.target.value });\n    }\n\n    registerClickHandler = () => {\n        this.state.firstname === \"\" ? this.setState({ firstnameRequired: \"dispBlock\" }) : this.setState({ firstnameRequired: \"dispNone\" });\n        this.state.lastname === \"\" ? this.setState({ lastnameRequired: \"dispBlock\" }) : this.setState({ lastnameRequired: \"dispNone\" });\n        this.state.email === \"\" ? this.setState({ emailRequired: \"dispBlock\" }) : this.setState({ emailRequired: \"dispNone\" });\n        this.state.registerPassword === \"\" ? this.setState({ registerPasswordRequired: \"dispBlock\" }) : this.setState({ registerPasswordRequired: \"dispNone\" });\n        this.state.contact === \"\" ? this.setState({ contactRequired: \"dispBlock\" }) : this.setState({ contactRequired: \"dispNone\" });\n\n        let dataSignup = JSON.stringify({\n            \"email_address\": this.state.email,\n            \"first_name\": this.state.firstname,\n            \"last_name\": this.state.lastname,\n            \"mobile_number\": this.state.contact,\n            \"password\": this.state.registerPassword\n        });\n\n        let xhrSignup = new XMLHttpRequest();\n        let that = this;\n        xhrSignup.addEventListener(\"readystatechange\", function () {\n            if (this.readyState === 4) {\n                that.setState({\n                    registrationSuccess: true\n                });\n            }\n        });\n\n        xhrSignup.open(\"POST\", this.props.baseUrl + \"signup\");\n        xhrSignup.setRequestHeader(\"Content-Type\", \"application/json\");\n        xhrSignup.setRequestHeader(\"Cache-Control\", \"no-cache\");\n        xhrSignup.send(dataSignup);\n    }\n\n    inputFirstNameChangeHandler = (e) => {\n        this.setState({ firstname: e.target.value });\n    }\n\n    inputLastNameChangeHandler = (e) => {\n        this.setState({ lastname: e.target.value });\n    }\n\n    inputEmailChangeHandler = (e) => {\n        this.setState({ email: e.target.value });\n    }\n\n    inputRegisterPasswordChangeHandler = (e) => {\n        this.setState({ registerPassword: e.target.value });\n    }\n\n    inputContactChangeHandler = (e) => {\n        this.setState({ contact: e.target.value });\n    }\n\n    logoutHandler = (e) => {\n        sessionStorage.removeItem(\"uuid\");\n        sessionStorage.removeItem(\"access-token\");\n\n        this.setState({\n            loggedIn: false\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <header className=\"app-header\">\n                    <img src={logo} className=\"app-logo\" alt=\"Movies App Logo\" />\n                    {!this.state.loggedIn ?\n                        <div className=\"login-button\">\n                            <Button variant=\"contained\" color=\"default\" onClick={this.openModalHandler}>\n                                Login\n                            </Button>\n                        </div>\n                        :\n                        <div className=\"login-button\">\n                            <Button variant=\"contained\" color=\"default\" onClick={this.logoutHandler}>\n                                Logout\n                            </Button>\n                        </div>\n                    }\n                    {this.props.showBookShowButton === \"true\" && !this.state.loggedIn\n                        ? <div className=\"bookshow-button\">\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.openModalHandler}>\n                                Book Show\n                            </Button>\n                        </div>\n                        : \"\"\n                    }\n\n                    {this.props.showBookShowButton === \"true\" && this.state.loggedIn\n                        ? <div className=\"bookshow-button\">\n                            <Link to={\"/bookshow/\" + this.props.id}>\n                                <Button variant=\"contained\" color=\"primary\">\n                                    Book Show\n                                </Button>\n                            </Link>\n                        </div>\n                        : \"\"\n                    }\n\n                </header>\n                <Modal\n                    ariaHideApp={false}\n                    isOpen={this.state.modalIsOpen}\n                    contentLabel=\"Login\"\n                    onRequestClose={this.closeModalHandler}\n                    style={customStyles}\n                >\n                    <Tabs className=\"tabs\" value={this.state.value} onChange={this.tabChangeHandler}>\n                        <Tab label=\"Login\" />\n                        <Tab label=\"Register\" />\n                    </Tabs>\n\n                    {this.state.value === 0 &&\n                        <TabContainer>\n                            <FormControl required>\n                                <InputLabel htmlFor=\"username\">Username</InputLabel>\n                                <Input id=\"username\" type=\"text\" username={this.state.username} onChange={this.inputUsernameChangeHandler} />\n                                <FormHelperText className={this.state.usernameRequired}>\n                                    <span className=\"red\">required</span>\n                                </FormHelperText>\n                            </FormControl>\n                            <br /><br />\n                            <FormControl required>\n                                <InputLabel htmlFor=\"loginPassword\">Password</InputLabel>\n                                <Input id=\"loginPassword\" type=\"password\" loginpassword={this.state.loginPassword} onChange={this.inputLoginPasswordChangeHandler} />\n                                <FormHelperText className={this.state.loginPasswordRequired}>\n                                    <span className=\"red\">required</span>\n                                </FormHelperText>\n                            </FormControl>\n                            <br /><br />\n                            {this.state.loggedIn === true &&\n                                <FormControl>\n                                    <span className=\"successText\">\n                                        Login Successful!\n                                    </span>\n                                </FormControl>\n                            }\n                            <br /><br />\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.loginClickHandler}>LOGIN</Button>\n                        </TabContainer>\n                    }\n\n                    {this.state.value === 1 &&\n                        <TabContainer>\n                            <FormControl required>\n                                <InputLabel htmlFor=\"firstname\">First Name</InputLabel>\n                                <Input id=\"firstname\" type=\"text\" firstname={this.state.firstname} onChange={this.inputFirstNameChangeHandler} />\n                                <FormHelperText className={this.state.firstnameRequired}>\n                                    <span className=\"red\">required</span>\n                                </FormHelperText>\n                            </FormControl>\n                            <br /><br />\n                            <FormControl required>\n                                <InputLabel htmlFor=\"lastname\">Last Name</InputLabel>\n                                <Input id=\"lastname\" type=\"text\" lastname={this.state.lastname} onChange={this.inputLastNameChangeHandler} />\n                                <FormHelperText className={this.state.lastnameRequired}>\n                                    <span className=\"red\">required</span>\n                                </FormHelperText>\n                            </FormControl>\n                            <br /><br />\n                            <FormControl required>\n                                <InputLabel htmlFor=\"email\">Email</InputLabel>\n                                <Input id=\"email\" type=\"text\" email={this.state.email} onChange={this.inputEmailChangeHandler} />\n                                <FormHelperText className={this.state.emailRequired}>\n                                    <span className=\"red\">required</span>\n                                </FormHelperText>\n                            </FormControl>\n                            <br /><br />\n                            <FormControl required>\n                                <InputLabel htmlFor=\"registerPassword\">Password</InputLabel>\n                                <Input id=\"registerPassword\" type=\"password\" registerpassword={this.state.registerPassword} onChange={this.inputRegisterPasswordChangeHandler} />\n                                <FormHelperText className={this.state.registerPasswordRequired}>\n                                    <span className=\"red\">required</span>\n                                </FormHelperText>\n                            </FormControl>\n                            <br /><br />\n                            <FormControl required>\n                                <InputLabel htmlFor=\"contact\">Contact No.</InputLabel>\n                                <Input id=\"contact\" type=\"text\" contact={this.state.contact} onChange={this.inputContactChangeHandler} />\n                                <FormHelperText className={this.state.contactRequired}>\n                                    <span className=\"red\">required</span>\n                                </FormHelperText>\n                            </FormControl>\n                            <br /><br />\n                            {this.state.registrationSuccess === true &&\n                                <FormControl>\n                                    <span className=\"successText\">\n                                        Registration Successful. Please Login!\n                                      </span>\n                                </FormControl>\n                            }\n                            <br /><br />\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.registerClickHandler}>REGISTER</Button>\n                        </TabContainer>\n                    }\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}